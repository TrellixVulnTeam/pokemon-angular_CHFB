var KeyCodes;
(function (KeyCodes) {
    KeyCodes[KeyCodes["LeftArrow"] = 37] = "LeftArrow";
    KeyCodes[KeyCodes["UpArrow"] = 38] = "UpArrow";
    KeyCodes[KeyCodes["RightArrow"] = 39] = "RightArrow";
    KeyCodes[KeyCodes["DownArrow"] = 40] = "DownArrow";
    KeyCodes[KeyCodes["Backspace"] = 8] = "Backspace";
    KeyCodes[KeyCodes["Tab"] = 9] = "Tab";
    KeyCodes[KeyCodes["Enter"] = 13] = "Enter";
    KeyCodes[KeyCodes["Escape"] = 27] = "Escape";
})(KeyCodes || (KeyCodes = {}));
function trapTabFocus(elm) {
    const focusableEls = elm.querySelectorAll('a, object, input, button, iframe, [tabindex]');
    const firstFocusableEl = focusableEls[0];
    const lastFocusableEl = focusableEls[focusableEls.length - 1];
    // if just a single focusable item focus it
    if (firstFocusableEl) {
        firstFocusableEl.focus();
    }
    // if two or more focusable items create focus loop
    if (firstFocusableEl && lastFocusableEl) {
        elm.addEventListener('keydown', (e) => {
            if (e.key !== 'Tab') {
                return;
            }
            if (e.shiftKey && document.activeElement === firstFocusableEl) {
                lastFocusableEl.focus();
                e.preventDefault();
            }
            else {
                if (document.activeElement === lastFocusableEl) {
                    firstFocusableEl.focus();
                    e.preventDefault();
                }
            }
        });
    }
}
function isBrowser() {
    return typeof window !== 'undefined';
}
function lockScroll() {
    if (isBrowser()) {
        document.body.style.overflow = 'hidden';
    }
}
function unlockScroll() {
    if (isBrowser()) {
        document.body.style.overflow = 'initial';
    }
}
function ariaHideBody() {
    if (isBrowser()) {
        document.body.setAttribute('aria-hidden', 'true');
    }
}
function ariaShowBody() {
    if (isBrowser()) {
        document.body.setAttribute('aria-hidden', 'false');
    }
}

/**
 * Generated bundle index. Do not edit.
 */

export { KeyCodes, ariaHideBody, ariaShowBody, isBrowser, lockScroll, trapTabFocus, unlockScroll };
//# sourceMappingURL=ngx-lite-util.js.map
