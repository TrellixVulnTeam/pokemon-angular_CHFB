export var KeyCodes;
(function (KeyCodes) {
    KeyCodes[KeyCodes["LeftArrow"] = 37] = "LeftArrow";
    KeyCodes[KeyCodes["UpArrow"] = 38] = "UpArrow";
    KeyCodes[KeyCodes["RightArrow"] = 39] = "RightArrow";
    KeyCodes[KeyCodes["DownArrow"] = 40] = "DownArrow";
    KeyCodes[KeyCodes["Backspace"] = 8] = "Backspace";
    KeyCodes[KeyCodes["Tab"] = 9] = "Tab";
    KeyCodes[KeyCodes["Enter"] = 13] = "Enter";
    KeyCodes[KeyCodes["Escape"] = 27] = "Escape";
})(KeyCodes || (KeyCodes = {}));
export function trapTabFocus(elm) {
    const focusableEls = elm.querySelectorAll('a, object, input, button, iframe, [tabindex]');
    const firstFocusableEl = focusableEls[0];
    const lastFocusableEl = focusableEls[focusableEls.length - 1];
    // if just a single focusable item focus it
    if (firstFocusableEl) {
        firstFocusableEl.focus();
    }
    // if two or more focusable items create focus loop
    if (firstFocusableEl && lastFocusableEl) {
        elm.addEventListener('keydown', (e) => {
            if (e.key !== 'Tab') {
                return;
            }
            if (e.shiftKey && document.activeElement === firstFocusableEl) {
                lastFocusableEl.focus();
                e.preventDefault();
            }
            else {
                if (document.activeElement === lastFocusableEl) {
                    firstFocusableEl.focus();
                    e.preventDefault();
                }
            }
        });
    }
}
export function isBrowser() {
    return typeof window !== 'undefined';
}
export function lockScroll() {
    if (isBrowser()) {
        document.body.style.overflow = 'hidden';
    }
}
export function unlockScroll() {
    if (isBrowser()) {
        document.body.style.overflow = 'initial';
    }
}
export function ariaHideBody() {
    if (isBrowser()) {
        document.body.setAttribute('aria-hidden', 'true');
    }
}
export function ariaShowBody() {
    if (isBrowser()) {
        document.body.setAttribute('aria-hidden', 'false');
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL25neC11dGlsL3NyYy9wdWJsaWNfYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBTixJQUFZLFFBU1g7QUFURCxXQUFZLFFBQVE7SUFDbEIsa0RBQWMsQ0FBQTtJQUNkLDhDQUFZLENBQUE7SUFDWixvREFBZSxDQUFBO0lBQ2Ysa0RBQWMsQ0FBQTtJQUNkLGlEQUFhLENBQUE7SUFDYixxQ0FBTyxDQUFBO0lBQ1AsMENBQVUsQ0FBQTtJQUNWLDRDQUFXLENBQUE7QUFDYixDQUFDLEVBVFcsUUFBUSxLQUFSLFFBQVEsUUFTbkI7QUFFRCxNQUFNLFVBQVUsWUFBWSxDQUFDLEdBQWdCO0lBQzNDLE1BQU0sWUFBWSxHQUFHLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FDdkMsOENBQThDLENBQy9DLENBQUM7SUFDRixNQUFNLGdCQUFnQixHQUFHLFlBQVksQ0FBQyxDQUFDLENBQWdCLENBQUM7SUFDeEQsTUFBTSxlQUFlLEdBQUcsWUFBWSxDQUFDLFlBQVksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFnQixDQUFDO0lBRTdFLDJDQUEyQztJQUMzQyxJQUFJLGdCQUFnQixFQUFFO1FBQ3BCLGdCQUFnQixDQUFDLEtBQUssRUFBRSxDQUFDO0tBQzFCO0lBRUQsbURBQW1EO0lBQ25ELElBQUksZ0JBQWdCLElBQUksZUFBZSxFQUFFO1FBQ3ZDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRTtZQUNwQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssS0FBSyxFQUFFO2dCQUNuQixPQUFPO2FBQ1I7WUFFRCxJQUFJLENBQUMsQ0FBQyxRQUFRLElBQUksUUFBUSxDQUFDLGFBQWEsS0FBSyxnQkFBZ0IsRUFBRTtnQkFDN0QsZUFBZSxDQUFDLEtBQUssRUFBRSxDQUFDO2dCQUN4QixDQUFDLENBQUMsY0FBYyxFQUFFLENBQUM7YUFDcEI7aUJBQU07Z0JBQ0wsSUFBSSxRQUFRLENBQUMsYUFBYSxLQUFLLGVBQWUsRUFBRTtvQkFDOUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLENBQUM7b0JBQ3pCLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztpQkFDcEI7YUFDRjtRQUNILENBQUMsQ0FBQyxDQUFDO0tBQ0o7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLFNBQVM7SUFDdkIsT0FBTyxPQUFPLE1BQU0sS0FBSyxXQUFXLENBQUM7QUFDdkMsQ0FBQztBQUVELE1BQU0sVUFBVSxVQUFVO0lBQ3hCLElBQUksU0FBUyxFQUFFLEVBQUU7UUFDZixRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0tBQ3pDO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFBVSxZQUFZO0lBQzFCLElBQUksU0FBUyxFQUFFLEVBQUU7UUFDZixRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDO0tBQzFDO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFBVSxZQUFZO0lBQzFCLElBQUksU0FBUyxFQUFFLEVBQUU7UUFDZixRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDbkQ7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLFlBQVk7SUFDMUIsSUFBSSxTQUFTLEVBQUUsRUFBRTtRQUNmLFFBQVEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQztLQUNwRDtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBLZXlDb2RlcyB7XG4gIExlZnRBcnJvdyA9IDM3LFxuICBVcEFycm93ID0gMzgsXG4gIFJpZ2h0QXJyb3cgPSAzOSxcbiAgRG93bkFycm93ID0gNDAsXG4gIEJhY2tzcGFjZSA9IDgsXG4gIFRhYiA9IDksXG4gIEVudGVyID0gMTMsXG4gIEVzY2FwZSA9IDI3LFxufVxuXG5leHBvcnQgZnVuY3Rpb24gdHJhcFRhYkZvY3VzKGVsbTogSFRNTEVsZW1lbnQpIHtcbiAgY29uc3QgZm9jdXNhYmxlRWxzID0gZWxtLnF1ZXJ5U2VsZWN0b3JBbGwoXG4gICAgJ2EsIG9iamVjdCwgaW5wdXQsIGJ1dHRvbiwgaWZyYW1lLCBbdGFiaW5kZXhdJ1xuICApO1xuICBjb25zdCBmaXJzdEZvY3VzYWJsZUVsID0gZm9jdXNhYmxlRWxzWzBdIGFzIEhUTUxFbGVtZW50O1xuICBjb25zdCBsYXN0Rm9jdXNhYmxlRWwgPSBmb2N1c2FibGVFbHNbZm9jdXNhYmxlRWxzLmxlbmd0aCAtIDFdIGFzIEhUTUxFbGVtZW50O1xuXG4gIC8vIGlmIGp1c3QgYSBzaW5nbGUgZm9jdXNhYmxlIGl0ZW0gZm9jdXMgaXRcbiAgaWYgKGZpcnN0Rm9jdXNhYmxlRWwpIHtcbiAgICBmaXJzdEZvY3VzYWJsZUVsLmZvY3VzKCk7XG4gIH1cblxuICAvLyBpZiB0d28gb3IgbW9yZSBmb2N1c2FibGUgaXRlbXMgY3JlYXRlIGZvY3VzIGxvb3BcbiAgaWYgKGZpcnN0Rm9jdXNhYmxlRWwgJiYgbGFzdEZvY3VzYWJsZUVsKSB7XG4gICAgZWxtLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZSkgPT4ge1xuICAgICAgaWYgKGUua2V5ICE9PSAnVGFiJykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChlLnNoaWZ0S2V5ICYmIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IGZpcnN0Rm9jdXNhYmxlRWwpIHtcbiAgICAgICAgbGFzdEZvY3VzYWJsZUVsLmZvY3VzKCk7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSBsYXN0Rm9jdXNhYmxlRWwpIHtcbiAgICAgICAgICBmaXJzdEZvY3VzYWJsZUVsLmZvY3VzKCk7XG4gICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzQnJvd3NlcigpIHtcbiAgcmV0dXJuIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbG9ja1Njcm9sbCgpIHtcbiAgaWYgKGlzQnJvd3NlcigpKSB7XG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1bmxvY2tTY3JvbGwoKSB7XG4gIGlmIChpc0Jyb3dzZXIoKSkge1xuICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnaW5pdGlhbCc7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFyaWFIaWRlQm9keSgpIHtcbiAgaWYgKGlzQnJvd3NlcigpKSB7XG4gICAgZG9jdW1lbnQuYm9keS5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJywgJ3RydWUnKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXJpYVNob3dCb2R5KCkge1xuICBpZiAoaXNCcm93c2VyKCkpIHtcbiAgICBkb2N1bWVudC5ib2R5LnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCAnZmFsc2UnKTtcbiAgfVxufVxuIl19